{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Default credentials (in real app, this would be from backend)\nconst defaultCredentials={username:\"admin\",password:\"admin123\"};useEffect(()=>{// Check if user is already logged in\nconst token=localStorage.getItem(\"authToken\");const userData=localStorage.getItem(\"userData\");if(token&&userData){setIsAuthenticated(true);setUser(JSON.parse(userData));}setLoading(false);},[]);const login=(username,password)=>{// Simple authentication (in real app, this would be API call)\nif(username===defaultCredentials.username&&password===defaultCredentials.password){const token=btoa(\"\".concat(username,\":\").concat(password,\":\").concat(Date.now()));const userData={username:username,role:\"admin\",loginTime:new Date().toISOString()};localStorage.setItem(\"authToken\",token);localStorage.setItem(\"userData\",JSON.stringify(userData));setIsAuthenticated(true);setUser(userData);return{success:true};}else{return{success:false,error:\"Invalid username or password\"};}};const logout=()=>{localStorage.removeItem(\"authToken\");localStorage.removeItem(\"userData\");setIsAuthenticated(false);setUser(null);};const value={isAuthenticated,user,login,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","defaultCredentials","username","password","token","localStorage","getItem","userData","JSON","parse","login","btoa","concat","Date","now","role","loginTime","toISOString","setItem","stringify","success","error","logout","removeItem","value","Provider"],"sources":["F:/SE FD BD MAD/React/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Default credentials (in real app, this would be from backend)\r\n  const defaultCredentials = {\r\n    username: \"admin\",\r\n    password: \"admin123\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem(\"authToken\");\r\n    const userData = localStorage.getItem(\"userData\");\r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (username, password) => {\r\n    // Simple authentication (in real app, this would be API call)\r\n    if (\r\n      username === defaultCredentials.username &&\r\n      password === defaultCredentials.password\r\n    ) {\r\n      const token = btoa(`${username}:${password}:${Date.now()}`);\r\n      const userData = {\r\n        username: username,\r\n        role: \"admin\",\r\n        loginTime: new Date().toISOString(),\r\n      };\r\n\r\n      localStorage.setItem(\"authToken\", token);\r\n      localStorage.setItem(\"userData\", JSON.stringify(userData));\r\n      setIsAuthenticated(true);\r\n      setUser(userData);\r\n      return { success: true };\r\n    } else {\r\n      return { success: false, error: \"Invalid username or password\" };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"authToken\");\r\n    localStorage.removeItem(\"userData\");\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}