{"ast":null,"code":"var _jsxFileName = \"F:\\\\SE FD BD MAD\\\\React\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(true);\n  useEffect(() => {\n    // Check saved theme preference\n    const savedTheme = localStorage.getItem(\"theme\");\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === \"dark\");\n    } else {\n      // Default to dark mode\n      setIsDarkMode(true);\n    }\n  }, []);\n  useEffect(() => {\n    // Apply theme to document\n    const root = document.documentElement;\n    if (isDarkMode) {\n      root.classList.add(\"dark\");\n      root.classList.remove(\"light\");\n      document.body.style.backgroundColor = \"#0f0f0f\";\n      document.body.style.color = \"#ffffff\";\n    } else {\n      root.classList.add(\"light\");\n      root.classList.remove(\"dark\");\n      document.body.style.backgroundColor = \"#ffffff\";\n      document.body.style.color = \"#1f2937\";\n    }\n\n    // Save preference\n    localStorage.setItem(\"theme\", isDarkMode ? \"dark\" : \"light\");\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const value = {\n    isDarkMode,\n    toggleTheme,\n    theme: isDarkMode ? \"dark\" : \"light\"\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"YOAWQZRLseyj1CECHtpxPgWaN24=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","root","document","documentElement","classList","add","remove","body","style","backgroundColor","color","setItem","toggleTheme","prev","value","theme","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/SE FD BD MAD/React/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check saved theme preference\r\n    const savedTheme = localStorage.getItem(\"theme\");\r\n    if (savedTheme) {\r\n      setIsDarkMode(savedTheme === \"dark\");\r\n    } else {\r\n      // Default to dark mode\r\n      setIsDarkMode(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply theme to document\r\n    const root = document.documentElement;\r\n    if (isDarkMode) {\r\n      root.classList.add(\"dark\");\r\n      root.classList.remove(\"light\");\r\n      document.body.style.backgroundColor = \"#0f0f0f\";\r\n      document.body.style.color = \"#ffffff\";\r\n    } else {\r\n      root.classList.add(\"light\");\r\n      root.classList.remove(\"dark\");\r\n      document.body.style.backgroundColor = \"#ffffff\";\r\n      document.body.style.color = \"#1f2937\";\r\n    }\r\n\r\n    // Save preference\r\n    localStorage.setItem(\"theme\", isDarkMode ? \"dark\" : \"light\");\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode((prev) => !prev);\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleTheme,\r\n    theme: isDarkMode ? \"dark\" : \"light\",\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,aAAa,CAACC,UAAU,KAAK,MAAM,CAAC;IACtC,CAAC,MAAM;MACL;MACAD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrC,IAAIP,UAAU,EAAE;MACdK,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC1BJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;MAC9BJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CP,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,SAAS;IACvC,CAAC,MAAM;MACLT,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MAC3BJ,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MAC7BJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CP,QAAQ,CAACK,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,SAAS;IACvC;;IAEA;IACAX,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEf,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;EAC9D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBf,aAAa,CAAEgB,IAAI,IAAK,CAACA,IAAI,CAAC;EAChC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZlB,UAAU;IACVgB,WAAW;IACXG,KAAK,EAAEnB,UAAU,GAAG,MAAM,GAAG;EAC/B,CAAC;EAED,oBACET,OAAA,CAACC,YAAY,CAAC4B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAE3E,CAAC;AAACzB,GAAA,CA9CWF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}